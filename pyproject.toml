[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "python-tests"
version = "0.1.0"
description = "Tests and prototyping coded in python"
authors = [{ name = "Emiliano Frigo" }]
requires-python = ">=3.10,<=3.12"
dependencies = [
    "pytz>=2022.1",
    "black>=25.1.0",
    "delta-spark>=3.3.0",
    "pyspark>=3.5.4",
    "scipy>=1.9.1",
    "scikit-learn>=1.1.2",
    "SQLAlchemy>=1.4.41",
    "types-pytz>=2022.7.0.0",
    "pyarrow>=14.0.2",
    "progressbar2>=4.3.2",
    "instaloader>=4.14",
    "faker>=33.3.0",
    "flask>=3.1.0",
    "black[jupyter]>=24.10.0",
    "jupyter-black>=0.4.0",
    "python-dotenv>=1.0.1",
    "boto3>=1.24.48",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "mypy-extensions>=0.4.3",
    "pgmock>=1.3.7",
    "pytest>=7.1.2",
    "pytest-cov>=3.0.0",
    "pytest-datadir>=1.3.1",
    "pytest-mock>=3.8.2",
    "reorder-python-imports>=3.8.2",
    "isort>=5.10.1",
    "pylint>=2.12.2",
    "pre-commit>=2.16.0",
    "ipykernel>=6.6.0",
    "bump2version>=1.0.1",
    "ffmpeg>=1.4",
    "ffmpeg-python>=0.2.0",
    "instaloader>=4.14.1",
    "ipykernel>=6.29.5,<7",
    "mypy>=1.15.0,<2.0.0",
    "pre-commit>=4.2.0,<5.0.0",
    "ruff>=0.11.8,<1.0.0",
]

[tool.setuptools.packages.find]
include = [
    "api_lab*",
    "aws_bedrock*",
    "aws_dynamodb_sqs*",
    "slack_channel_configs*",
]
exclude = ["scripts*", "spark-lab*"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 79
indent-width = 4

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F", "I"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Use double quotes for strings.
quote-style = "double"

# Indent with spaces, rather than tabs.
indent-style = "space"

# Respect magic trailing commas.
skip-magic-trailing-comma = false

# Automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.mypy]
ignore_missing_imports = true
follow_imports = "skip"
show_error_codes = true
no_implicit_optional = true
disable_error_code = ["union-attr", "attr-defined", "import-untyped"]
pretty = false
warn_unreachable = false
show_error_context = false
exclude = ["^\\.venv/"]
